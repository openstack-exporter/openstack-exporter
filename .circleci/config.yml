---
version: 2.1

executors:
  # Whenever the Go version is updated here, .promu.yml should also be updated.
  golang:
    docker:
    - image: circleci/golang:1.11

jobs:

  test:
    executor: golang
    steps:
    - checkout
    - run: go mod vendor
    - run: go mod download
    - run: make all

  build:
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/niedbalski/openstack-exporter

    steps:
    - checkout
    - run: sudo apt-get install snapd
    - run: sudo snap install go
    - run: go mod vendor
    - run: go mod download
    - run: make promu
    - run: promu crossbuild -v
    - persist_to_workspace:
        root: .
        paths:
        - .build
    - store_artifacts:
        path: .build
        destination: /build

  release:
    executor: golang
    steps:
      - checkout
      - run: mkdir -v -p ${HOME}/bin
      - run: curl -L 'https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2' | tar xvjf - --strip-components 3 -C ${HOME}/bin
      - run: echo 'export PATH=${HOME}/bin:${PATH}' >> ${BASH_ENV}
      - attach_workspace:
          at: .
      - run: make promu
      - run: promu crossbuild tarballs
      - run: promu checksum .tarballs
      - run: |
          github-release release --user ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --tag ${CIRCLE_TAG} || true
      - run: promu release .tarballs
      - store_artifacts:
          path: .tarballs
          destination: releases

  docker_master:
    executor: golang
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run: make docker DOCKER_REPO=quay.io/niedbalski DOCKER_ARCHS="amd64 arm64"
    - run: docker images
    - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
    - run: docker run -i -t --entrypoint "sh" quay.io/niedbalski/openstack-exporter-linux-amd64:master -c 'test -e /bin/openstack-exporter; exit $?'
    - run: make docker-publish DOCKER_REPO=quay.io/niedbalski DOCKER_ARCHS="amd64 arm64"

  docker_tag:
    executor: golang
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run: make docker DOCKER_IMAGE_TAG=$CIRCLE_TAG DOCKER_REPO=quay.io/niedbalski DOCKER_ARCHS="amd64 arm64"
    - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
    - run: |
        if [[ "$CIRCLE_TAG" =~ ^v[0-9]+(\.[0-9]+){2}$ ]]; then
          make docker-tag-latest DOCKER_IMAGE_TAG="$CIRCLE_TAG" DOCKER_REPO=quay.io/niedbalski DOCKER_ARCHS="amd64 arm64"
        fi
    - run: docker run -i -t --entrypoint "sh" quay.io/niedbalski/openstack-exporter-linux-amd64:$CIRCLE_TAG -c 'test -e /bin/openstack-exporter; exit $?'
    - run: make docker-publish DOCKER_IMAGE_TAG="$CIRCLE_TAG" DOCKER_REPO=quay.io/niedbalski DOCKER_ARCHS="amd64 arm64"

workflows:
  version: 2
  openstack_exporter:
    jobs:
    - test:
        filters:
          tags:
            only: /.*/
    - build:
        filters:
          tags:
            only: /.*/
        requires:
          - test

    - release:
        requires:
          - test
          - build
        filters:
          tags:
            only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
          branches:
            ignore: /.*/

    - docker_master:
        requires:
          - test
          - build
        filters:
          branches:
           only: master

    - docker_tag:
        requires:
          - test
          - build
        filters:
          tags:
            only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
          branches:
            ignore: /.*/